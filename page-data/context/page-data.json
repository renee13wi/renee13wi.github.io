{"componentChunkName":"component---src-templates-blog-post-js","path":"/context/","result":{"data":{"site":{"siteMetadata":{"title":"Renee Tech Blog"}},"markdownRemark":{"id":"4c540af3-8982-5293-9e0c-f76ef9dbda6c","excerpt":"ECMAScript에서는 실행 컨텍스트를 실행 가능한 코드를 형상화하고 구분하는 추상적인 개념으로 기술한다. 쉽게 말하자면 코드들이 실행되기 위한 환경이라고 할 수 있고, 이 컨텍스트 안에 실행에 필요한 여러가지 정보를 담고 있다. ECMAScript…","html":"<p>ECMAScript에서는 실행 컨텍스트를 <strong>실행 가능한 코드를 형상화하고 구분하는 추상적인 개념</strong>으로 기술한다.</p>\n<p>쉽게 말하자면 <strong>코드들이 실행되기 위한 환경</strong>이라고 할 수 있고, 이 컨텍스트 안에 <strong>실행에 필요한 여러가지 정보</strong>를 담고 있다.</p>\n<p>ECMAScript에서는 실행 컨텍스트가 형성되는 경우를 세가지로 규정하고 있는데,</p>\n<ul>\n<li>전역코드</li>\n<li>eval()함수로 실행되는 코드</li>\n<li>함수 안의 코드</li>\n</ul>\n<p>대부분의 프로그래머는 함수로 실행 컨텍스트를 만든다.</p>\n<p>그리고 이 코드 블록 안에 변수 및 객체, 실행 가능한 코드가 들어있다.\n이 코드가 실행되면 실행 컨텍스트가 생성되고, 실행 컨텍스트는 스택 안에 하나씩 차곡차곡 쌓이고,\n제일 위에 위치하는 실행 컨텍스트가 현재 실행되고 있는 컨텍스트다.\nECMAScript에서는 실행 컨텍스트의 생성을 다음처럼 설명한다.</p>\n<p><strong>현재 실행되는 컨텍스트에서 이 컨텍스트와 관련 없는 실행 코드가 실행되면, 새로운 컨텍스트가 생성되어 스택에 들어가고 제어권이 그 컨텍스트로 이동한다.</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">console.log<span class=\"token punctuation\">(</span><span class=\"token string\">\"This is global context\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function-name function\">ExContext1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tconsole.log<span class=\"token punctuation\">(</span><span class=\"token string\">\"This is ExContext1\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function-name function\">ExContext2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tExContext1<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\tconsole.log<span class=\"token punctuation\">(</span><span class=\"token string\">\"This is ExContext2\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nExContext2<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>[출력 결과]</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">This is global context\nThis is ExContext1\nThis is ExContext2</code></pre></div>\n<p>전역 실행 컨텍스트가 가장 먼저 실행된다.\n전역 실행 컨텍스트라는 말은 가장 먼저 실행되는 실행 컨텍스트일 뿐이다.\n이 과정에서 새로운 함수 호출이 발생하면 새로운 컨텍스트가 만들어지고 실행되며, 종료되면 반환한다.\n이와 같은 과정이 반복된 후, 전역 실행 컨텍스트의 실행이 완료되면 모든 실행이 끝난다.</p>","frontmatter":{"title":"Execution Context?","date":"December 21, 2020","description":"실행컨텍스트는 코드실행의 필요한 정보를 담아놓은 곳"}},"previous":null,"next":null},"pageContext":{"id":"4c540af3-8982-5293-9e0c-f76ef9dbda6c","previousPostId":null,"nextPostId":null}},"staticQueryHashes":["2841359383","4159699291"]}